

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 03 23:54:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4550 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     _TRISBbits	set	3987
    47  0000                     _LATBbits	set	3978
    48                           
    49                           ; #config settings
    50  0000                     
    51                           	psect	cinit
    52  007F8E                     __pcinit:
    53                           	opt callstack 0
    54  007F8E                     start_initialization:
    55                           	opt callstack 0
    56  007F8E                     __initialization:
    57                           	opt callstack 0
    58  007F8E                     end_of_initialization:
    59                           	opt callstack 0
    60  007F8E                     __end_of__initialization:
    61                           	opt callstack 0
    62  007F8E  0100               	movlb	0
    63  007F90  EFCE  F03F         	goto	_main	;jump to C main() function
    64                           
    65                           	psect	cstackCOMRAM
    66  000001                     __pcstackCOMRAM:
    67                           	opt callstack 0
    68  000001                     ??_main:
    69                           
    70                           ; 1 bytes @ 0x0
    71  000001                     	ds	1
    72  000002                     main@variableRandonDeCuentaXD:
    73                           	opt callstack 0
    74                           
    75                           ; 2 bytes @ 0x1
    76  000002                     	ds	2
    77                           
    78 ;;
    79 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    80 ;;
    81 ;; *************** function _main *****************
    82 ;; Defined at:
    83 ;;		line 22 in file "main.c"
    84 ;; Parameters:    Size  Location     Type
    85 ;;		None
    86 ;; Auto vars:     Size  Location     Type
    87 ;;  variableRand    2    1[COMRAM] int 
    88 ;;  counter         2    0        int 
    89 ;; Return value:  Size  Location     Type
    90 ;;                  1    wreg      void 
    91 ;; Registers used:
    92 ;;		wreg, status,2, status,0, cstack
    93 ;; Tracked objects:
    94 ;;		On entry : 0/0
    95 ;;		On exit  : 0/0
    96 ;;		Unchanged: 0/0
    97 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    98 ;;      Params:         0       0       0       0       0       0       0       0       0
    99 ;;      Locals:         2       0       0       0       0       0       0       0       0
   100 ;;      Temps:          1       0       0       0       0       0       0       0       0
   101 ;;      Totals:         3       0       0       0       0       0       0       0       0
   102 ;;Total ram usage:        3 bytes
   103 ;; Hardware stack levels required when called:    1
   104 ;; This function calls:
   105 ;;		_limpiaPuertos
   106 ;; This function is called by:
   107 ;;		Startup code after reset
   108 ;; This function uses a non-reentrant model
   109 ;;
   110                           
   111                           	psect	text0
   112  007F9C                     __ptext0:
   113                           	opt callstack 0
   114  007F9C                     _main:
   115                           	opt callstack 30
   116  007F9C                     
   117                           ;main.c: 24:     limpiaPuertos();
   118  007F9C  ECCA  F03F         	call	_limpiaPuertos	;wreg free
   119  007FA0                     
   120                           ;main.c: 25:     for (variableRandonDeCuentaXD = 0 ; variableRandonDeCuentaXD <= 100 ; v
      +                          ariableRandonDeCuentaXD ++){
   121  007FA0  0E00               	movlw	0
   122  007FA2  6E03               	movwf	(main@variableRandonDeCuentaXD+1)^0,c
   123  007FA4  0E00               	movlw	0
   124  007FA6  6E02               	movwf	main@variableRandonDeCuentaXD^0,c
   125  007FA8                     l708:
   126                           
   127                           ;main.c: 26:         if (variableRandonDeCuentaXD <= 50){
   128  007FA8  BE03               	btfsc	(main@variableRandonDeCuentaXD+1)^0,7,c
   129  007FAA  EFE2  F03F         	goto	u10
   130  007FAE  5003               	movf	(main@variableRandonDeCuentaXD+1)^0,w,c
   131  007FB0  E107               	bnz	u11
   132  007FB2  0E33               	movlw	51
   133  007FB4  5C02               	subwf	main@variableRandonDeCuentaXD^0,w,c
   134  007FB6  B0D8               	btfsc	status,0,c
   135  007FB8  EFE0  F03F         	goto	u11
   136  007FBC  EFE2  F03F         	goto	u10
   137  007FC0                     u11:
   138  007FC0  EFE5  F03F         	goto	l15
   139  007FC4                     u10:
   140  007FC4                     
   141                           ;main.c: 27:             LATBbits.LATB0 = 1;
   142  007FC4  808A               	bsf	138,0,c	;volatile
   143                           
   144                           ;main.c: 28:         } else {
   145  007FC6  EFE6  F03F         	goto	l712
   146  007FCA                     l15:
   147                           
   148                           ;main.c: 29:             LATBbits.LATB0 = 0;
   149  007FCA  908A               	bcf	138,0,c	;volatile
   150  007FCC                     l712:
   151                           
   152                           ;main.c: 31:         _delay((unsigned long)((5)*(20000000/4000.0)));
   153  007FCC  0E21               	movlw	33
   154  007FCE  6E01               	movwf	??_main^0,c
   155  007FD0  0E76               	movlw	118
   156  007FD2                     u37:
   157  007FD2  2EE8               	decfsz	wreg,f,c
   158  007FD4  D7FE               	bra	u37
   159  007FD6  2E01               	decfsz	??_main^0,f,c
   160  007FD8  D7FC               	bra	u37
   161  007FDA  D000               	nop2	
   162  007FDC                     
   163                           ;main.c: 32:     }
   164  007FDC  4A02               	infsnz	main@variableRandonDeCuentaXD^0,f,c
   165  007FDE  2A03               	incf	(main@variableRandonDeCuentaXD+1)^0,f,c
   166  007FE0  BE03               	btfsc	(main@variableRandonDeCuentaXD+1)^0,7,c
   167  007FE2  EFFC  F03F         	goto	u21
   168  007FE6  5003               	movf	(main@variableRandonDeCuentaXD+1)^0,w,c
   169  007FE8  E109               	bnz	u20
   170  007FEA  0E65               	movlw	101
   171  007FEC  5C02               	subwf	main@variableRandonDeCuentaXD^0,w,c
   172  007FEE  A0D8               	btfss	status,0,c
   173  007FF0  EFFC  F03F         	goto	u21
   174  007FF4  EFFE  F03F         	goto	u20
   175  007FF8                     u21:
   176  007FF8  EFD4  F03F         	goto	l708
   177  007FFC                     u20:
   178  007FFC  EF00  F000         	goto	start
   179  008000                     __end_of_main:
   180                           	opt callstack 0
   181                           
   182 ;; *************** function _limpiaPuertos *****************
   183 ;; Defined at:
   184 ;;		line 36 in file "main.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		None
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   198 ;;      Params:         0       0       0       0       0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0       0       0       0       0
   200 ;;      Temps:          0       0       0       0       0       0       0       0       0
   201 ;;      Totals:         0       0       0       0       0       0       0       0       0
   202 ;;Total ram usage:        0 bytes
   203 ;; Hardware stack levels used:    1
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		_main
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text1
   212  007F94                     __ptext1:
   213                           	opt callstack 0
   214  007F94                     _limpiaPuertos:
   215                           	opt callstack 30
   216  007F94                     
   217                           ;main.c: 37:     TRISBbits.RB0 = 0;
   218  007F94  9093               	bcf	147,0,c	;volatile
   219                           
   220                           ;main.c: 38:     TRISBbits.RB1 = 1;
   221  007F96  8293               	bsf	147,1,c	;volatile
   222                           
   223                           ;main.c: 39:     TRISBbits.RB2 = 1;
   224  007F98  8493               	bsf	147,2,c	;volatile
   225  007F9A  0012               	return		;funcret
   226  007F9C                     __end_of_limpiaPuertos:
   227                           	opt callstack 0
   228  0000                     
   229                           	psect	rparam
   230  0000                     tosu	equ	0xFFF
   231                           tosh	equ	0xFFE
   232                           tosl	equ	0xFFD
   233                           stkptr	equ	0xFFC
   234                           pclatu	equ	0xFFB
   235                           pclath	equ	0xFFA
   236                           pcl	equ	0xFF9
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           prodh	equ	0xFF4
   242                           prodl	equ	0xFF3
   243                           indf0	equ	0xFEF
   244                           postinc0	equ	0xFEE
   245                           postdec0	equ	0xFED
   246                           preinc0	equ	0xFEC
   247                           plusw0	equ	0xFEB
   248                           fsr0h	equ	0xFEA
   249                           fsr0l	equ	0xFE9
   250                           wreg	equ	0xFE8
   251                           indf1	equ	0xFE7
   252                           postinc1	equ	0xFE6
   253                           postdec1	equ	0xFE5
   254                           preinc1	equ	0xFE4
   255                           plusw1	equ	0xFE3
   256                           fsr1h	equ	0xFE2
   257                           fsr1l	equ	0xFE1
   258                           bsr	equ	0xFE0
   259                           indf2	equ	0xFDF
   260                           postinc2	equ	0xFDE
   261                           postdec2	equ	0xFDD
   262                           preinc2	equ	0xFDC
   263                           plusw2	equ	0xFDB
   264                           fsr2h	equ	0xFDA
   265                           fsr2l	equ	0xFD9
   266                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      45
                                              0 COMRAM     3     3      0
                      _limpiaPuertos
 ---------------------------------------------------------------------------------
 (1) _limpiaPuertos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _limpiaPuertos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 03 23:54:27 2020

                          l20 7F9A                            l15 7FCA                            l17 7FFC  
                          u10 7FC4                            u11 7FC0                            u20 7FFC  
                          u21 7FF8                            u37 7FD2                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l700 7F9C                           l710 7FC4  
                         l702 7FA0                           l712 7FCC                           l714 7FDC  
                         l708 7FA8                           l696 7F94                           l698 7F9C  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                  __CFG_BOR$OFF 000000  
                         wreg 000FE8                  __CFG_FOSC$HS 000000                  __CFG_LVP$OFF 000000  
                __CFG_WDT$OFF 000000                          _main 7F9C                          start 0000  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
               __CFG_PLLDIV$1 000000                         ?_main 0001                 __CFG_USBDIV$1 000000  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         status 000FD8  
              __CFG_ICPRT$OFF 000000               __initialization 7F8E                  __end_of_main 8000  
                      ??_main 0001                 __activetblptr 000000               __CFG_CCP2MX$OFF 000000  
              __CFG_XINST$OFF 000000                    __accesstop 0060       __end_of__initialization 7F8E  
             __CFG_PBADEN$OFF 000000                 ___rparam_used 000001                __pcstackCOMRAM 0001  
      __size_of_limpiaPuertos 0008                 _limpiaPuertos 7F94               __CFG_VREGEN$OFF 000000  
                     __Hparam 0000                       __Lparam 0000               __CFG_STVREN$OFF 000000  
                     __pcinit 7F8E                       __ramtop 0800                       __ptext0 7F9C  
                     __ptext1 7F94                ?_limpiaPuertos 0001          end_of_initialization 7F8E  
main@variableRandonDeCuentaXD 0002                     _TRISBbits 000F93           start_initialization 7F8E  
             ??_limpiaPuertos 0001              __CFG_LPT1OSC$OFF 000000                      _LATBbits 000F8A  
            __CFG_WDTPS$32768 000000                      __Hrparam 0000                      __Lrparam 0000  
               __size_of_main 0064         __CFG_CPUDIV$OSC1_PLL2 000000         __end_of_limpiaPuertos 7F9C  
